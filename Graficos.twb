<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0527.1215                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='output' inline='true' name='textscan.42283.934809074075' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/algo3-tp2' filename='output.csv' password='' server=''>
        <relation name='output#csv' table='[output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='L' ordinal='0' />
            <column datatype='real' name='N' ordinal='1' />
            <column datatype='integer' name='case' ordinal='2' />
            <column datatype='integer' name='method' ordinal='3' />
            <column datatype='string' name='name' ordinal='4' />
            <column datatype='integer' name='run' ordinal='5' />
            <column datatype='string' name='timer' ordinal='6' />
            <column datatype='integer' name='value' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>L</remote-name>
            <remote-type>5</remote-type>
            <local-name>[L]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>L</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>N</remote-name>
            <remote-type>5</remote-type>
            <local-name>[N]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>N</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>case</remote-name>
            <remote-type>20</remote-type>
            <local-name>[case]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>case</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method</remote-name>
            <remote-type>20</remote-type>
            <local-name>[method]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>method</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run</remote-name>
            <remote-type>20</remote-type>
            <local-name>[run]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>run</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timer]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>timer</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[output#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[L]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='CountD' datatype='real' name='[N]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Case' datatype='integer' name='[case]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Ejercicio 1' />
          <alias key='2' value='Ejercicio 2' />
          <alias key='3' value='Ejercicio 3' />
        </aliases>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
          <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
          <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Run' datatype='integer' name='[run]' role='dimension' type='ordinal'>
      </column>
      <column caption='Timer' datatype='string' name='[timer]' role='dimension' type='nominal'>
      </column>
      <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[N]' derivation='None' name='[none:N:ok]' pivot='key' type='ordinal' />
      <column-instance column='[case]' derivation='None' name='[none:case:qk]' pivot='key' type='quantitative' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Case,Name)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:case:qk]' />
          <groupfilter function='level-members' level='[none:name:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:N:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>1.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>5.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>15.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>11.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>9.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>6.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>2.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>12.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>10.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>7.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>13.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>14.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>3.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>8.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>4.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#2ca02c'>
              <bucket>&quot;complejidad_best&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;complejidad_random&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;complejidad_worst&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Comparación de Casos, Ejercicio 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42283.934809074075' />
          </datasources>
          <datasource-dependencies datasource='textscan.42283.934809074075'>
            <column caption='SUM([Value]/100)' datatype='real' name='[Calculation_2671023083438990]' role='measure' type='quantitative' user:unnamed='Comparación de Casos Ejercicio 1'>
              <calculation class='tableau' formula='SUM([value]/100)' />
            </column>
            <column aggregation='Sum' caption='Case' datatype='integer' name='[case]' role='dimension' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Ejercicio 1' />
                <alias key='2' value='Ejercicio 2' />
                <alias key='3' value='Ejercicio 3' />
              </aliases>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[case]' derivation='None' name='[none:case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2671023083438990]' derivation='User' name='[usr:Calculation_2671023083438990:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42283.934809074075].[none:method:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='Cantidad de pisos (n)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.42283.934809074075].[usr:Calculation_2671023083438990:qk]' scope='rows' value='Tiempo promedio (μs)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[usr:Calculation_2671023083438990:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[usr:Calculation_2671023083438990:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42283.934809074075].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42283.934809074075].[usr:Calculation_2671023083438990:qk]</rows>
        <cols>[textscan.42283.934809074075].[none:case:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Comparación de Casos, Ejercicio 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42283.934809074075' />
          </datasources>
          <datasource-dependencies datasource='textscan.42283.934809074075'>
            <column caption='SUM([Value])/100' datatype='real' name='[Calculation_5381023085556054]' role='measure' type='quantitative' user:unnamed='Comparación de Casos, Ejercicio 2'>
              <calculation class='tableau' formula='SUM([value])/100' />
            </column>
            <column aggregation='Sum' caption='Case' datatype='integer' name='[case]' role='dimension' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Ejercicio 1' />
                <alias key='2' value='Ejercicio 2' />
                <alias key='3' value='Ejercicio 3' />
              </aliases>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[case]' derivation='None' name='[none:case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5381023085556054]' derivation='User' name='[usr:Calculation_5381023085556054:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42283.934809074075].[none:method:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='N, L' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.42283.934809074075].[usr:Calculation_5381023085556054:qk]' scope='rows' value='Tiempo promedio (μs)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[usr:Calculation_5381023085556054:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[usr:Calculation_5381023085556054:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42283.934809074075].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42283.934809074075].[usr:Calculation_5381023085556054:qk]</rows>
        <cols>[textscan.42283.934809074075].[none:case:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Comparación de Casos, Ejercicio 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42283.934809074075' />
          </datasources>
          <datasource-dependencies datasource='textscan.42283.934809074075'>
            <column caption='SUM([Value]/100)' datatype='real' name='[Calculation_3641023095813886]' role='measure' type='quantitative' user:unnamed='Comparación de Casos, Ejercicio 3'>
              <calculation class='tableau' formula='SUM([value]/100)' />
            </column>
            <column aggregation='Sum' caption='Case' datatype='integer' name='[case]' role='dimension' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Ejercicio 1' />
                <alias key='2' value='Ejercicio 2' />
                <alias key='3' value='Ejercicio 3' />
              </aliases>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[case]' derivation='None' name='[none:case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_3641023095813886]' derivation='User' name='[usr:Calculation_3641023095813886:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42283.934809074075].[none:method:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='Cantidad de pasillos (n)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.42283.934809074075].[usr:Calculation_3641023095813886:qk]' scope='rows' value='Tiempo promedio (μs)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[usr:Calculation_3641023095813886:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[usr:Calculation_3641023095813886:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42283.934809074075].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42283.934809074075].[usr:Calculation_3641023095813886:qk]</rows>
        <cols>[textscan.42283.934809074075].[none:case:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Mejor y Peor Caso, Ejercicio 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42283.934809074075' />
          </datasources>
          <datasource-dependencies datasource='textscan.42283.934809074075'>
            <column caption='[Value]/(100*([Case]*[Case]*IIF([Name]=&quot;Peor Caso&quot;, 1, [Case])))' datatype='real' name='[Calculation_5261023085344741]' role='measure' type='quantitative' user:unnamed='Mejor y Peor Caso, Segunda Comparación, Ejercicio 2'>
              <calculation class='tableau' formula='[value]/(100*([case]*[case]*IIF([name]=&quot;Peor Caso&quot;, 1, [case])))' />
            </column>
            <column aggregation='Sum' caption='Case' datatype='integer' name='[case]' role='dimension' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Ejercicio 1' />
                <alias key='2' value='Ejercicio 2' />
                <alias key='3' value='Ejercicio 3' />
              </aliases>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[case]' derivation='None' name='[none:case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5261023085344741]' derivation='Sum' name='[sum:Calculation_5261023085344741:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42283.934809074075].[Exclusions (Case,Name)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:case:qk]' />
                <groupfilter function='level-members' level='[none:name:nk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:case:qk]' member='1' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_best&quot;' />
                    <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_worst&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:case:qk]' member='2' />
                  <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_worst&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_best&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_worst&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42283.934809074075].[none:name:nk]</column>
            <column>[textscan.42283.934809074075].[none:method:ok]</column>
            <column>[textscan.42283.934809074075].[Exclusions (Case,Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='N, L' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.42283.934809074075].[sum:Calculation_5261023085344741:qk]' scope='rows' value='Tiempo promedio sobre NL + P (μs)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[sum:Calculation_5261023085344741:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[sum:Calculation_5261023085344741:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[textscan.42283.934809074075].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.40580111742019653' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42283.934809074075].[sum:Calculation_5261023085344741:qk]</rows>
        <cols>[textscan.42283.934809074075].[none:case:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Mejor y Peor Caso, Ejercicio 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42283.934809074075' />
          </datasources>
          <datasource-dependencies datasource='textscan.42283.934809074075'>
            <column caption='[Case] + 4' datatype='integer' name='[Calculation_0731007222206933]' role='measure' type='quantitative' user:unnamed='Mejor Caso Ejercicio 3'>
              <calculation class='tableau' formula='[case] + 4' />
            </column>
            <column caption='[Value]/(100*([Case] * [Case] * LOG([Case], 2)))' datatype='real' name='[Calculation_4161023095013104]' role='measure' type='quantitative' user:unnamed='Mejor y Peor Caso, Ejercicio 3'>
              <calculation class='tableau' formula='[value]/(100*([case] * [case] * LOG([case], 2)))' />
            </column>
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Ejercicio 1' />
                <alias key='2' value='Ejercicio 2' />
                <alias key='3' value='Ejercicio 3' />
              </aliases>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[Calculation_0731007222206933]' derivation='None' name='[none:Calculation_0731007222206933:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_4161023095013104]' derivation='Sum' name='[sum:Calculation_4161023095013104:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_best&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_worst&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42283.934809074075].[none:name:nk]</column>
            <column>[textscan.42283.934809074075].[none:method:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42283.934809074075].[none:Calculation_0731007222206933:qk]' scope='cols' value='Cantidad de pasillos (n)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[none:Calculation_0731007222206933:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[none:Calculation_0731007222206933:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.42283.934809074075].[sum:Calculation_4161023095013104:qk]' scope='rows' value='Tiempo promedio sobre n^2 log(n) (μs)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[sum:Calculation_4161023095013104:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[sum:Calculation_4161023095013104:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[textscan.42283.934809074075].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.42779004573822021' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42283.934809074075].[sum:Calculation_4161023095013104:qk]</rows>
        <cols>[textscan.42283.934809074075].[none:Calculation_0731007222206933:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Peor y Mejor Caso, Ejercicio 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42283.934809074075' />
          </datasources>
          <datasource-dependencies datasource='textscan.42283.934809074075'>
            <column caption='[Value]/(100*[Case]*[Case])' datatype='real' name='[Calculation_1151023083139536]' role='measure' type='quantitative' user:unnamed='Peor Caso Ejercicio 1'>
              <calculation class='tableau' formula='[value]/(100*[case]*[case])' />
            </column>
            <column aggregation='Sum' caption='Case' datatype='integer' name='[case]' role='dimension' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Ejercicio 1' />
                <alias key='2' value='Ejercicio 2' />
                <alias key='3' value='Ejercicio 3' />
              </aliases>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[case]' derivation='None' name='[none:case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1151023083139536]' derivation='Sum' name='[sum:Calculation_1151023083139536:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42283.934809074075].[Exclusions (Case,Name)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:case:qk]' />
                <groupfilter function='level-members' level='[none:name:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:case:qk]' member='1' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_best&quot;' />
                  <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_worst&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_best&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_worst&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42283.934809074075].[none:method:ok]</column>
            <column>[textscan.42283.934809074075].[none:name:nk]</column>
            <column>[textscan.42283.934809074075].[Exclusions (Case,Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='Cantidad de pisos (n)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.42283.934809074075].[sum:Calculation_1151023083139536:qk]' scope='rows' value='Tiempo promedio sobre n^2 (μs)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[sum:Calculation_1151023083139536:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[sum:Calculation_1151023083139536:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[textscan.42283.934809074075].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.42779004573822021' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42283.934809074075].[sum:Calculation_1151023083139536:qk]</rows>
        <cols>[textscan.42283.934809074075].[none:case:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Ejercicio 1'>
      <style>
      </style>
      <size maxheight='500' maxwidth='500' minheight='500' minwidth='500' />
      <zones>
        <zone h='50000' id='3' name='Peor y Mejor Caso, Ejercicio 1' show-title='true' w='100000' x='0' y='0'>
        </zone>
        <zone h='50000' id='10' name='Comparación de Casos, Ejercicio 1' show-title='true' w='100000' x='0' y='50000'>
        </zone>
        <zone h='16000' id='15' name='Comparación de Casos, Ejercicio 1' pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' w='28000' x='69800' y='7000'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Ejercicio 2'>
      <style>
      </style>
      <size maxheight='500' maxwidth='500' minheight='500' minwidth='500' />
      <zones>
        <zone h='50000' id='8' name='Comparación de Casos, Ejercicio 2' show-title='true' w='100000' x='0' y='50000'>
        </zone>
        <zone h='50000' id='14' name='Mejor y Peor Caso, Ejercicio 2' show-title='true' w='100000' x='0' y='0'>
        </zone>
        <zone h='16800' id='13' name='Comparación de Casos, Ejercicio 2' pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' w='28000' x='70600' y='6400'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Ejercicio 3'>
      <style>
      </style>
      <size maxheight='500' maxwidth='500' minheight='500' minwidth='500' />
      <zones>
        <zone h='50000' id='1' name='Mejor y Peor Caso, Ejercicio 3' show-title='true' w='100000' x='0' y='0'>
        </zone>
        <zone h='50000' id='4' name='Comparación de Casos, Ejercicio 3' show-title='true' w='100000' x='0' y='50000'>
        </zone>
        <zone h='16600' id='9' name='Comparación de Casos, Ejercicio 3' pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' w='28000' x='9400' y='6200'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='dashboard' maximized='0' name='Ejercicio 1'>
      <zones>
        <zone name='Peor y Mejor Caso, Ejercicio 1'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Comparación de Casos, Ejercicio 1'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight field='[textscan.42283.934809074075].[none:name:nk]'>
            <bucket-selection>
            </bucket-selection>
          </highlight>
        </zone>
        <zone name='Comparación de Casos, Ejercicio 1' pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Ejercicio 2'>
      <zones>
        <zone name='Comparación de Casos, Ejercicio 2'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[textscan.42283.934809074075].[none:name:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Mejor y Peor Caso, Ejercicio 2'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Comparación de Casos, Ejercicio 2' pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Ejercicio 3'>
      <zones>
        <zone name='Comparación de Casos, Ejercicio 3'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[textscan.42283.934809074075].[none:name:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Comparación de Casos, Ejercicio 3' pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
      </zones>
    </window>
    <window class='hidden-worksheet' name='Comparación de Casos, Ejercicio 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42283.934809074075].[none:case:qk]</field>
          <field>[textscan.42283.934809074075].[none:method:ok]</field>
          <field>[textscan.42283.934809074075].[none:name:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Comparación de Casos, Ejercicio 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42283.934809074075].[none:case:qk]</field>
          <field>[textscan.42283.934809074075].[none:method:ok]</field>
          <field>[textscan.42283.934809074075].[none:name:nk]</field>
          <field>[textscan.42283.934809074075].[none:timer:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Comparación de Casos, Ejercicio 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42283.934809074075].[none:case:qk]</field>
          <field>[textscan.42283.934809074075].[none:method:ok]</field>
          <field>[textscan.42283.934809074075].[none:name:nk]</field>
          <field>[textscan.42283.934809074075].[none:timer:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Mejor y Peor Caso, Ejercicio 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Mejor y Peor Caso, Ejercicio 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42283.934809074075].[none:Calculation_0731007222206933:qk]</field>
          <field>[textscan.42283.934809074075].[none:case:qk]</field>
          <field>[textscan.42283.934809074075].[none:method:ok]</field>
          <field>[textscan.42283.934809074075].[none:name:nk]</field>
          <field>[textscan.42283.934809074075].[none:timer:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Peor y Mejor Caso, Ejercicio 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42283.934809074075].[none:Calculation_4161006223417050:qk]</field>
          <field>[textscan.42283.934809074075].[none:Calculation_8821006223433660:qk]</field>
          <field>[textscan.42283.934809074075].[none:case:ok]</field>
          <field>[textscan.42283.934809074075].[none:method:ok]</field>
          <field>[textscan.42283.934809074075].[none:name:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <axis>[textscan.42283.934809074075].[sum:Calculation_1151023083139536:qk]</axis>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Ejercicio 1' width='192'>
      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
      dxhAQ7wR/gCK5aVo7bPlbQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ejercicio 2' width='192'>
      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
      CzHZyvb4ukSDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ejercicio 3' width='192'>
      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
      RU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
