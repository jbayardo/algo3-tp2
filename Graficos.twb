<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='9.0' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 9000.15.0527.1215                                -->
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='output' inline='true' name='textscan.42283.934809074075' version='9.0'>
      <connection class='textscan' directory='//VBOXSVR/algo3-tp2' filename='output.csv' password='' server=''>
        <relation name='output#csv' table='[output#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='real' name='L' ordinal='0' />
            <column datatype='real' name='N' ordinal='1' />
            <column datatype='integer' name='case' ordinal='2' />
            <column datatype='integer' name='method' ordinal='3' />
            <column datatype='string' name='name' ordinal='4' />
            <column datatype='integer' name='run' ordinal='5' />
            <column datatype='string' name='timer' ordinal='6' />
            <column datatype='integer' name='value' ordinal='7' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>L</remote-name>
            <remote-type>5</remote-type>
            <local-name>[L]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>L</remote-alias>
            <ordinal>0</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>N</remote-name>
            <remote-type>5</remote-type>
            <local-name>[N]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>N</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;double&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>case</remote-name>
            <remote-type>20</remote-type>
            <local-name>[case]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>case</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>method</remote-name>
            <remote-type>20</remote-type>
            <local-name>[method]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>method</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>run</remote-name>
            <remote-type>20</remote-type>
            <local-name>[run]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>run</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timer</remote-name>
            <remote-type>129</remote-type>
            <local-name>[timer]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>timer</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteCollation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='DebugRemoteMetadata (compression)'>&quot;heap&quot;</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>4294967292</attribute>
              <attribute datatype='integer' name='DebugRemoteMetadata (storagewidth)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;str&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[output#csv]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='DebugRemoteMetadata (size)'>8</attribute>
              <attribute datatype='string' name='DebugRemoteType'>&quot;sint64&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[output#csv]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='real' name='[L]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='CountD' datatype='real' name='[N]' role='dimension' type='ordinal'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' caption='Case' datatype='integer' name='[case]' role='dimension' type='quantitative'>
      </column>
      <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Ejercicio 1' />
          <alias key='2' value='Ejercicio 2' />
          <alias key='3' value='Ejercicio 3' />
        </aliases>
      </column>
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
          <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
          <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
        </aliases>
      </column>
      <column aggregation='Sum' caption='Run' datatype='integer' name='[run]' role='dimension' type='ordinal'>
      </column>
      <column caption='Timer' datatype='string' name='[timer]' role='dimension' type='nominal'>
      </column>
      <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[N]' derivation='None' name='[none:N:ok]' pivot='key' type='ordinal' />
      <column-instance column='[case]' derivation='None' name='[none:case:qk]' pivot='key' type='quantitative' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Case,Name)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:case:qk]' />
          <groupfilter function='level-members' level='[none:name:nk]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:N:ok]' type='palette'>
            <map to='#1f77b4'>
              <bucket>1.0</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>5.0</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>15.0</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>11.0</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>9.0</bucket>
            </map>
            <map to='#98df8a'>
              <bucket>6.0</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>2.0</bucket>
            </map>
            <map to='#c49c94'>
              <bucket>12.0</bucket>
            </map>
            <map to='#c5b0d5'>
              <bucket>10.0</bucket>
            </map>
            <map to='#d62728'>
              <bucket>7.0</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>13.0</bucket>
            </map>
            <map to='#f7b6d2'>
              <bucket>14.0</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>3.0</bucket>
            </map>
            <map to='#ff9896'>
              <bucket>8.0</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>4.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#2ca02c'>
              <bucket>&quot;complejidad_best&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;complejidad_random&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;complejidad_worst&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Comparación de Casos, Ejercicio 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42283.934809074075' />
          </datasources>
          <datasource-dependencies datasource='textscan.42283.934809074075'>
            <column caption='SUM([Value]/100)' datatype='real' name='[Calculation_2671023083438990]' role='measure' type='quantitative' user:unnamed='Comparación de Casos Ejercicio 1'>
              <calculation class='tableau' formula='SUM([value]/100)' />
            </column>
            <column aggregation='Sum' caption='Case' datatype='integer' name='[case]' role='dimension' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Ejercicio 1' />
                <alias key='2' value='Ejercicio 2' />
                <alias key='3' value='Ejercicio 3' />
              </aliases>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[case]' derivation='None' name='[none:case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_2671023083438990]' derivation='User' name='[usr:Calculation_2671023083438990:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42283.934809074075].[none:method:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='Cantidad de pisos (n)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.42283.934809074075].[usr:Calculation_2671023083438990:qk]' scope='rows' value='Tiempo promedio (μs)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[usr:Calculation_2671023083438990:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[usr:Calculation_2671023083438990:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42283.934809074075].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42283.934809074075].[usr:Calculation_2671023083438990:qk]</rows>
        <cols>[textscan.42283.934809074075].[none:case:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Comparación de Casos, Ejercicio 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42283.934809074075' />
          </datasources>
          <datasource-dependencies datasource='textscan.42283.934809074075'>
            <column caption='SUM([Value])/100' datatype='real' name='[Calculation_5381023085556054]' role='measure' type='quantitative' user:unnamed='Comparación de Casos, Ejercicio 2'>
              <calculation class='tableau' formula='SUM([value])/100' />
            </column>
            <column aggregation='Sum' caption='Case' datatype='integer' name='[case]' role='dimension' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Ejercicio 1' />
                <alias key='2' value='Ejercicio 2' />
                <alias key='3' value='Ejercicio 3' />
              </aliases>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[case]' derivation='None' name='[none:case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5381023085556054]' derivation='User' name='[usr:Calculation_5381023085556054:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42283.934809074075].[none:method:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='N, L' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.42283.934809074075].[usr:Calculation_5381023085556054:qk]' scope='rows' value='Tiempo promedio (μs)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[usr:Calculation_5381023085556054:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[usr:Calculation_5381023085556054:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42283.934809074075].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42283.934809074075].[usr:Calculation_5381023085556054:qk]</rows>
        <cols>[textscan.42283.934809074075].[none:case:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Comparación de Casos, Ejercicio 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42283.934809074075' />
          </datasources>
          <datasource-dependencies datasource='textscan.42283.934809074075'>
            <column-instance column='[value]' derivation='Avg' name='[avg:value:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' caption='Case' datatype='integer' name='[case]' role='dimension' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Ejercicio 1' />
                <alias key='2' value='Ejercicio 2' />
                <alias key='3' value='Ejercicio 3' />
              </aliases>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[case]' derivation='None' name='[none:case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[textscan.42283.934809074075].[none:method:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42283.934809074075].[avg:value:qk]' scope='rows' value='Tiempo promedio (μs)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[avg:value:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[avg:value:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='Cantidad de pasillos (n)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[textscan.42283.934809074075].[none:name:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[textscan.42283.934809074075].[avg:value:qk]</rows>
        <cols>[textscan.42283.934809074075].[none:case:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Mejor y Peor Caso, Ejercicio 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42283.934809074075' />
          </datasources>
          <datasource-dependencies datasource='textscan.42283.934809074075'>
            <column caption='[Value]/(100*([Case]*[Case]*IIF([Name]=&quot;Peor Caso&quot;, 1, [Case])))' datatype='real' name='[Calculation_5261023085344741]' role='measure' type='quantitative' user:unnamed='Mejor y Peor Caso, Segunda Comparación, Ejercicio 2'>
              <calculation class='tableau' formula='[value]/(100*([case]*[case]*IIF([name]=&quot;Peor Caso&quot;, 1, [case])))' />
            </column>
            <column aggregation='Sum' caption='Case' datatype='integer' name='[case]' role='dimension' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Ejercicio 1' />
                <alias key='2' value='Ejercicio 2' />
                <alias key='3' value='Ejercicio 3' />
              </aliases>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[case]' derivation='None' name='[none:case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_5261023085344741]' derivation='Sum' name='[sum:Calculation_5261023085344741:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42283.934809074075].[Exclusions (Case,Name)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:case:qk]' />
                <groupfilter function='level-members' level='[none:name:nk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:case:qk]' member='1' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_best&quot;' />
                    <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_worst&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:case:qk]' member='2' />
                  <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_worst&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_best&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_worst&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42283.934809074075].[none:name:nk]</column>
            <column>[textscan.42283.934809074075].[none:method:ok]</column>
            <column>[textscan.42283.934809074075].[Exclusions (Case,Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='N, L' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.42283.934809074075].[sum:Calculation_5261023085344741:qk]' scope='rows' value='Tiempo promedio sobre NL + P (μs)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[sum:Calculation_5261023085344741:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[sum:Calculation_5261023085344741:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane id='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[textscan.42283.934809074075].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.40580111742019653' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42283.934809074075].[sum:Calculation_5261023085344741:qk]</rows>
        <cols>[textscan.42283.934809074075].[none:case:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Mejor y Peor Caso, Ejercicio 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42283.934809074075' />
          </datasources>
          <datasource-dependencies datasource='textscan.42283.934809074075'>
            <column caption='[Case] + 4' datatype='integer' name='[Calculation_0731007222206933]' role='measure' type='quantitative' user:unnamed='Mejor Caso Ejercicio 3'>
              <calculation class='tableau' formula='[case] + 4' />
            </column>
            <column caption='[Value]/(100*([Case] + LOG([Case], 2)))' datatype='real' name='[Calculation_8291023091241977]' role='measure' type='quantitative' user:unnamed='Mejor Caso Ejercicio 3'>
              <calculation class='tableau' formula='[value]/(100*([case] + LOG([case], 2)))' />
            </column>
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Ejercicio 1' />
                <alias key='2' value='Ejercicio 2' />
                <alias key='3' value='Ejercicio 3' />
              </aliases>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[Calculation_0731007222206933]' derivation='None' name='[none:Calculation_0731007222206933:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_8291023091241977]' derivation='Sum' name='[sum:Calculation_8291023091241977:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='3' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_best&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_worst&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42283.934809074075].[none:name:nk]</column>
            <column>[textscan.42283.934809074075].[none:method:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42283.934809074075].[none:Calculation_0731007222206933:qk]' scope='cols' value='Cantidad de pasillos (n)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[none:Calculation_0731007222206933:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[none:Calculation_0731007222206933:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.42283.934809074075].[sum:Calculation_8291023091241977:qk]' scope='rows' value='Tiempo promedio sobre n log(n) (μs)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[sum:Calculation_8291023091241977:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[sum:Calculation_8291023091241977:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[textscan.42283.934809074075].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.42779004573822021' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42283.934809074075].[sum:Calculation_8291023091241977:qk]</rows>
        <cols>[textscan.42283.934809074075].[none:Calculation_0731007222206933:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Peor y Mejor Caso, Ejercicio 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='output' name='textscan.42283.934809074075' />
          </datasources>
          <datasource-dependencies datasource='textscan.42283.934809074075'>
            <column caption='[Value]/(100*[Case]*[Case])' datatype='real' name='[Calculation_1151023083139536]' role='measure' type='quantitative' user:unnamed='Peor Caso Ejercicio 1'>
              <calculation class='tableau' formula='[value]/(100*[case]*[case])' />
            </column>
            <column aggregation='Sum' caption='Case' datatype='integer' name='[case]' role='dimension' type='quantitative'>
            </column>
            <column aggregation='Sum' caption='Method' datatype='integer' name='[method]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Ejercicio 1' />
                <alias key='2' value='Ejercicio 2' />
                <alias key='3' value='Ejercicio 3' />
              </aliases>
            </column>
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;complejidad_best&quot;' value='Mejor Caso' />
                <alias key='&quot;complejidad_random&quot;' value='Caso Aleatorio' />
                <alias key='&quot;complejidad_worst&quot;' value='Peor Caso' />
              </aliases>
            </column>
            <column-instance column='[case]' derivation='None' name='[none:case:qk]' pivot='key' type='quantitative' />
            <column-instance column='[method]' derivation='None' name='[none:method:ok]' pivot='key' type='ordinal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1151023083139536]' derivation='Sum' name='[sum:Calculation_1151023083139536:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[textscan.42283.934809074075].[Exclusions (Case,Name)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:case:qk]' />
                <groupfilter function='level-members' level='[none:name:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:case:qk]' member='1' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_best&quot;' />
                  <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_worst&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:method:ok]'>
            <groupfilter function='member' level='[none:method:ok]' member='1' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[textscan.42283.934809074075].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_best&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;complejidad_worst&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[textscan.42283.934809074075].[none:method:ok]</column>
            <column>[textscan.42283.934809074075].[none:name:nk]</column>
            <column>[textscan.42283.934809074075].[Exclusions (Case,Name)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='Cantidad de pisos (n)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[none:case:qk]' scope='cols' value='true' />
            <format attr='title' class='0' field='[textscan.42283.934809074075].[sum:Calculation_1151023083139536:qk]' scope='rows' value='Tiempo promedio sobre n^2 (μs)' />
            <format attr='subtitle' class='0' field='[textscan.42283.934809074075].[sum:Calculation_1151023083139536:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[textscan.42283.934809074075].[sum:Calculation_1151023083139536:qk]' scope='rows' value='true' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[textscan.42283.934809074075].[none:name:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.42779004573822021' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[textscan.42283.934809074075].[sum:Calculation_1151023083139536:qk]</rows>
        <cols>[textscan.42283.934809074075].[none:case:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Ejercicio 1'>
      <style>
      </style>
      <size maxheight='500' maxwidth='500' minheight='500' minwidth='500' />
      <zones>
        <zone h='50000' id='3' name='Peor y Mejor Caso, Ejercicio 1' show-title='true' w='100000' x='0' y='0'>
        </zone>
        <zone h='50000' id='10' name='Comparación de Casos, Ejercicio 1' show-title='true' w='100000' x='0' y='50000'>
        </zone>
        <zone h='16000' id='15' name='Comparación de Casos, Ejercicio 1' pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' w='28000' x='69800' y='7000'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Ejercicio 2'>
      <style>
      </style>
      <size maxheight='500' maxwidth='500' minheight='500' minwidth='500' />
      <zones>
        <zone h='50000' id='8' name='Comparación de Casos, Ejercicio 2' show-title='true' w='100000' x='0' y='50000'>
        </zone>
        <zone h='50000' id='14' name='Mejor y Peor Caso, Ejercicio 2' show-title='true' w='100000' x='0' y='0'>
        </zone>
        <zone h='16800' id='13' name='Comparación de Casos, Ejercicio 2' pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' w='28000' x='70600' y='6400'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Ejercicio 3'>
      <style>
      </style>
      <size maxheight='500' maxwidth='500' minheight='500' minwidth='500' />
      <zones>
        <zone h='50000' id='1' name='Mejor y Peor Caso, Ejercicio 3' show-title='true' w='100000' x='0' y='0'>
        </zone>
        <zone h='50000' id='4' name='Comparación de Casos, Ejercicio 3' show-title='true' w='100000' x='0' y='50000'>
        </zone>
        <zone h='16600' id='9' name='Comparación de Casos, Ejercicio 3' pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' w='28000' x='9400' y='6200'>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='dashboard' maximized='0' name='Ejercicio 1'>
      <zones>
        <zone name='Peor y Mejor Caso, Ejercicio 1'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Comparación de Casos, Ejercicio 1'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight field='[textscan.42283.934809074075].[none:name:nk]'>
            <bucket-selection>
            </bucket-selection>
          </highlight>
        </zone>
        <zone name='Comparación de Casos, Ejercicio 1' pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Ejercicio 2'>
      <zones>
        <zone name='Comparación de Casos, Ejercicio 2'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[textscan.42283.934809074075].[none:name:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Mejor y Peor Caso, Ejercicio 2'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Comparación de Casos, Ejercicio 2' pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
      </zones>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='1' name='Ejercicio 3'>
      <zones>
        <zone name='Comparación de Casos, Ejercicio 3'>
          <viewpoint>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[textscan.42283.934809074075].[none:name:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Comparación de Casos, Ejercicio 3' pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
      </zones>
    </window>
    <window class='hidden-worksheet' name='Comparación de Casos, Ejercicio 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42283.934809074075].[none:case:qk]</field>
          <field>[textscan.42283.934809074075].[none:method:ok]</field>
          <field>[textscan.42283.934809074075].[none:name:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Comparación de Casos, Ejercicio 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42283.934809074075].[none:case:qk]</field>
          <field>[textscan.42283.934809074075].[none:method:ok]</field>
          <field>[textscan.42283.934809074075].[none:name:nk]</field>
          <field>[textscan.42283.934809074075].[none:timer:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Comparación de Casos, Ejercicio 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42283.934809074075].[none:case:qk]</field>
          <field>[textscan.42283.934809074075].[none:method:ok]</field>
          <field>[textscan.42283.934809074075].[none:name:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Mejor y Peor Caso, Ejercicio 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='1' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Mejor y Peor Caso, Ejercicio 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42283.934809074075].[none:Calculation_0731007222206933:qk]</field>
          <field>[textscan.42283.934809074075].[none:case:qk]</field>
          <field>[textscan.42283.934809074075].[none:method:ok]</field>
          <field>[textscan.42283.934809074075].[none:name:nk]</field>
          <field>[textscan.42283.934809074075].[none:timer:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
      </selection-collection>
    </window>
    <window class='hidden-worksheet' name='Peor y Mejor Caso, Ejercicio 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[textscan.42283.934809074075].[none:name:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[textscan.42283.934809074075].[none:Calculation_4161006223417050:qk]</field>
          <field>[textscan.42283.934809074075].[none:Calculation_8821006223433660:qk]</field>
          <field>[textscan.42283.934809074075].[none:case:ok]</field>
          <field>[textscan.42283.934809074075].[none:method:ok]</field>
          <field>[textscan.42283.934809074075].[none:name:nk]</field>
        </color-one-way>
      </highlight>
      <selection-collection>
        <node-selection select-tuples='false'>
          <oriented-node-reference orientation='vertical'>
            <node-reference>
              <axis>[textscan.42283.934809074075].[sum:Calculation_1151023083139536:qk]</axis>
            </node-reference>
            <page-reference>
            </page-reference>
          </oriented-node-reference>
        </node-selection>
      </selection-collection>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Ejercicio 1' width='192'>
      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
      dxhAQ7wR/gCK5aVo7bPlbQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Ejercicio 2' width='192'>
      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
      CzHZyvb4ukSDAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Ejercicio 3' width='192'>
      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
      RK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
